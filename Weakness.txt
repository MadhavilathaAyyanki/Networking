Vulnerabilities:Few weaknesses have been found in the code when compared against the STRIDE threat modelling.1. Identity Spoofing: There is a chance for identity spoofing as we are accessing a file from user’s directory that are available in the code. Security validations are must such as authentication, file access etc., to avoid attacks like virus or trojan injection, if the accessed file is an executable.2. Data Tampering: CRC validation check has been implemented on PDU message body in the code but on the logging file, there are slight chances for tampering of the data where changes in the user’s log activities are possible done by an attacker.3. Information Disclosure: Attacker might take advantage of PDU logging, disclosing of log file hashing mechanism SHA256 and encryption mechanism AES256-CBC mode.As CBC mode is a Block cipher which is a slow process but the most secure one. CBC mode is the mostly used. However, if any error is made then the final output results with error then the data decryption is not possible.4. Denial-of-Service: Mentioned 1024 byte length that is passed to the socket library in the code and if the peer sends more than the byte length, then it results in buffer overflow.5. Man-in-the-middle attack is possible in Diffie Hellman Key Exchange algorithm where the attacker stays on the public channel and attacker receives sender’s and receiver’s public keys and sends his generated own public key to the receiver and the sender6. Directory Encryption: Directory encryption has been performed in order to convert the data in the directory which is available in plain text to encrypted text i.e., cipher text to prevent from unauthorised access and helps the authorised user to read the data with the help of a secret key or a pass.7. CHAP: Challenge-Handshake Authentication Protocol (CHAP) is an authentication method used by Point-to-Point Protocol (PPP) to verify the identity of a remote user and involves a 3-way handshake. By negotiating CHAP in the both authenticator and that peer, for any mutual authentication, the same secret key can be easily used. The CHAP process is followed as:a) Authenticator will send an authentication challenge once after the link establishment.b) The peer will send a response with “one-way hash” function value.c) Authenticator verifies the incoming hash value from peer with its expected hash value. Authentication will be acknowledged if the values are matched, otherwise the “connection must be terminated”.d) Authenticator will send new challenges to the peer at random intervals.CHAP Disadvantages:CHAP is vulnerable to any of the attacks if the attackers observe the PPP session that send unencrypted data and “in the clear”. User’s name, CHAP challenges and responses and any information related to the PPP session can be seen by an attacker.Diffie Hellman Key Exchange:1. Diffie Hellman Key Exchange is used to encrypt the data that helps in providing security for the plaintext. 2. Data communication is done through an insecure channel after the keys are exchanged with the sender and the receiver and the secret key that is shared is kept safe by encryption.Encapsulation: Used encapsulation technique where the data is wrapped and the data in the code acts together as one unit. 